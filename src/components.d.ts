/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { UniColor, UniIconsFaFont, UniIconsMatFont, UniSize } from "./models";
export namespace Components {
    interface UniFaStylesLoad {
    }
    interface UniFarCopy {
    }
    interface UniFasAngleDown {
    }
    interface UniFasDownload {
    }
    interface UniFasFileDownload {
    }
    interface UniIconFa {
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
        "type": UniIconsFaFont;
    }
    interface UniIconMat {
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
        "type": UniIconsMatFont;
    }
    interface UniIconsFa {
        "color": UniColor;
        "degree": number;
        "init": boolean;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
        "type": UniIconsFaFont;
    }
    interface UniIconsFaWrap {
        "all": boolean;
        "color": UniColor;
        "degree": number;
        "init": boolean;
        "name": string;
        "rotate": boolean;
        "selector": string;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
        "type": UniIconsFaFont;
    }
    interface UniIconsFab {
        "color": UniColor;
        "degree": number;
        "init": boolean;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsFabWrap {
        "all": boolean;
        "color": UniColor;
        "degree": number;
        "init": boolean;
        "name": string;
        "rotate": boolean;
        "selector": string;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsFar {
        "color": UniColor;
        "degree": number;
        "init": boolean;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsFarWrap {
        "all": boolean;
        "color": UniColor;
        "degree": number;
        "init": boolean;
        "name": string;
        "rotate": boolean;
        "selector": string;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsFas {
        "color": UniColor;
        "degree": number;
        "init": boolean;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsFasWrap {
        "all": boolean;
        "color": UniColor;
        "degree": number;
        "init": boolean;
        "name": string;
        "rotate": boolean;
        "selector": string;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMat {
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
        "type": UniIconsMatFont;
    }
    interface UniIconsMatFilled {
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatFilledWrap {
        "all": boolean;
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "selector": string;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatOutlined {
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatOutlinedWrap {
        "all": boolean;
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "selector": string;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatRound {
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatRoundWrap {
        "all": boolean;
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "selector": string;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatSharp {
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatSharpWrap {
        "all": boolean;
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "selector": string;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatTwoTone {
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatTwoToneWrap {
        "all": boolean;
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "selector": string;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
    }
    interface UniIconsMatWrap {
        "color": UniColor;
        "degree": number;
        "name": string;
        "rotate": boolean;
        "size": UniSize | number;
        "speed": number;
        "steps": number;
        "type": UniIconsMatFont;
    }
    interface UniMatF3dRotation {
    }
    interface UniMatFAddShoppingCart {
    }
    interface UniMatFArrowDropDown {
    }
    interface UniRotateWrap {
        "all": boolean;
        "degree": number;
        "selector": string;
        "speed": number;
        "steps": number;
    }
    interface UniThemeWrap {
        "all": boolean;
        "color": UniColor;
        "filter": UniColor;
        "fontSize": UniSize | number;
        "selector": string;
        "size": UniSize | number;
    }
    interface UniWrap {
        "all": boolean;
        "classes": string;
        "selector": string;
    }
}
declare global {
    interface HTMLUniFaStylesLoadElement extends Components.UniFaStylesLoad, HTMLStencilElement {
    }
    var HTMLUniFaStylesLoadElement: {
        prototype: HTMLUniFaStylesLoadElement;
        new (): HTMLUniFaStylesLoadElement;
    };
    interface HTMLUniFarCopyElement extends Components.UniFarCopy, HTMLStencilElement {
    }
    var HTMLUniFarCopyElement: {
        prototype: HTMLUniFarCopyElement;
        new (): HTMLUniFarCopyElement;
    };
    interface HTMLUniFasAngleDownElement extends Components.UniFasAngleDown, HTMLStencilElement {
    }
    var HTMLUniFasAngleDownElement: {
        prototype: HTMLUniFasAngleDownElement;
        new (): HTMLUniFasAngleDownElement;
    };
    interface HTMLUniFasDownloadElement extends Components.UniFasDownload, HTMLStencilElement {
    }
    var HTMLUniFasDownloadElement: {
        prototype: HTMLUniFasDownloadElement;
        new (): HTMLUniFasDownloadElement;
    };
    interface HTMLUniFasFileDownloadElement extends Components.UniFasFileDownload, HTMLStencilElement {
    }
    var HTMLUniFasFileDownloadElement: {
        prototype: HTMLUniFasFileDownloadElement;
        new (): HTMLUniFasFileDownloadElement;
    };
    interface HTMLUniIconFaElement extends Components.UniIconFa, HTMLStencilElement {
    }
    var HTMLUniIconFaElement: {
        prototype: HTMLUniIconFaElement;
        new (): HTMLUniIconFaElement;
    };
    interface HTMLUniIconMatElement extends Components.UniIconMat, HTMLStencilElement {
    }
    var HTMLUniIconMatElement: {
        prototype: HTMLUniIconMatElement;
        new (): HTMLUniIconMatElement;
    };
    interface HTMLUniIconsFaElement extends Components.UniIconsFa, HTMLStencilElement {
    }
    var HTMLUniIconsFaElement: {
        prototype: HTMLUniIconsFaElement;
        new (): HTMLUniIconsFaElement;
    };
    interface HTMLUniIconsFaWrapElement extends Components.UniIconsFaWrap, HTMLStencilElement {
    }
    var HTMLUniIconsFaWrapElement: {
        prototype: HTMLUniIconsFaWrapElement;
        new (): HTMLUniIconsFaWrapElement;
    };
    interface HTMLUniIconsFabElement extends Components.UniIconsFab, HTMLStencilElement {
    }
    var HTMLUniIconsFabElement: {
        prototype: HTMLUniIconsFabElement;
        new (): HTMLUniIconsFabElement;
    };
    interface HTMLUniIconsFabWrapElement extends Components.UniIconsFabWrap, HTMLStencilElement {
    }
    var HTMLUniIconsFabWrapElement: {
        prototype: HTMLUniIconsFabWrapElement;
        new (): HTMLUniIconsFabWrapElement;
    };
    interface HTMLUniIconsFarElement extends Components.UniIconsFar, HTMLStencilElement {
    }
    var HTMLUniIconsFarElement: {
        prototype: HTMLUniIconsFarElement;
        new (): HTMLUniIconsFarElement;
    };
    interface HTMLUniIconsFarWrapElement extends Components.UniIconsFarWrap, HTMLStencilElement {
    }
    var HTMLUniIconsFarWrapElement: {
        prototype: HTMLUniIconsFarWrapElement;
        new (): HTMLUniIconsFarWrapElement;
    };
    interface HTMLUniIconsFasElement extends Components.UniIconsFas, HTMLStencilElement {
    }
    var HTMLUniIconsFasElement: {
        prototype: HTMLUniIconsFasElement;
        new (): HTMLUniIconsFasElement;
    };
    interface HTMLUniIconsFasWrapElement extends Components.UniIconsFasWrap, HTMLStencilElement {
    }
    var HTMLUniIconsFasWrapElement: {
        prototype: HTMLUniIconsFasWrapElement;
        new (): HTMLUniIconsFasWrapElement;
    };
    interface HTMLUniIconsMatElement extends Components.UniIconsMat, HTMLStencilElement {
    }
    var HTMLUniIconsMatElement: {
        prototype: HTMLUniIconsMatElement;
        new (): HTMLUniIconsMatElement;
    };
    interface HTMLUniIconsMatFilledElement extends Components.UniIconsMatFilled, HTMLStencilElement {
    }
    var HTMLUniIconsMatFilledElement: {
        prototype: HTMLUniIconsMatFilledElement;
        new (): HTMLUniIconsMatFilledElement;
    };
    interface HTMLUniIconsMatFilledWrapElement extends Components.UniIconsMatFilledWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatFilledWrapElement: {
        prototype: HTMLUniIconsMatFilledWrapElement;
        new (): HTMLUniIconsMatFilledWrapElement;
    };
    interface HTMLUniIconsMatOutlinedElement extends Components.UniIconsMatOutlined, HTMLStencilElement {
    }
    var HTMLUniIconsMatOutlinedElement: {
        prototype: HTMLUniIconsMatOutlinedElement;
        new (): HTMLUniIconsMatOutlinedElement;
    };
    interface HTMLUniIconsMatOutlinedWrapElement extends Components.UniIconsMatOutlinedWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatOutlinedWrapElement: {
        prototype: HTMLUniIconsMatOutlinedWrapElement;
        new (): HTMLUniIconsMatOutlinedWrapElement;
    };
    interface HTMLUniIconsMatRoundElement extends Components.UniIconsMatRound, HTMLStencilElement {
    }
    var HTMLUniIconsMatRoundElement: {
        prototype: HTMLUniIconsMatRoundElement;
        new (): HTMLUniIconsMatRoundElement;
    };
    interface HTMLUniIconsMatRoundWrapElement extends Components.UniIconsMatRoundWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatRoundWrapElement: {
        prototype: HTMLUniIconsMatRoundWrapElement;
        new (): HTMLUniIconsMatRoundWrapElement;
    };
    interface HTMLUniIconsMatSharpElement extends Components.UniIconsMatSharp, HTMLStencilElement {
    }
    var HTMLUniIconsMatSharpElement: {
        prototype: HTMLUniIconsMatSharpElement;
        new (): HTMLUniIconsMatSharpElement;
    };
    interface HTMLUniIconsMatSharpWrapElement extends Components.UniIconsMatSharpWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatSharpWrapElement: {
        prototype: HTMLUniIconsMatSharpWrapElement;
        new (): HTMLUniIconsMatSharpWrapElement;
    };
    interface HTMLUniIconsMatTwoToneElement extends Components.UniIconsMatTwoTone, HTMLStencilElement {
    }
    var HTMLUniIconsMatTwoToneElement: {
        prototype: HTMLUniIconsMatTwoToneElement;
        new (): HTMLUniIconsMatTwoToneElement;
    };
    interface HTMLUniIconsMatTwoToneWrapElement extends Components.UniIconsMatTwoToneWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatTwoToneWrapElement: {
        prototype: HTMLUniIconsMatTwoToneWrapElement;
        new (): HTMLUniIconsMatTwoToneWrapElement;
    };
    interface HTMLUniIconsMatWrapElement extends Components.UniIconsMatWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatWrapElement: {
        prototype: HTMLUniIconsMatWrapElement;
        new (): HTMLUniIconsMatWrapElement;
    };
    interface HTMLUniMatF3dRotationElement extends Components.UniMatF3dRotation, HTMLStencilElement {
    }
    var HTMLUniMatF3dRotationElement: {
        prototype: HTMLUniMatF3dRotationElement;
        new (): HTMLUniMatF3dRotationElement;
    };
    interface HTMLUniMatFAddShoppingCartElement extends Components.UniMatFAddShoppingCart, HTMLStencilElement {
    }
    var HTMLUniMatFAddShoppingCartElement: {
        prototype: HTMLUniMatFAddShoppingCartElement;
        new (): HTMLUniMatFAddShoppingCartElement;
    };
    interface HTMLUniMatFArrowDropDownElement extends Components.UniMatFArrowDropDown, HTMLStencilElement {
    }
    var HTMLUniMatFArrowDropDownElement: {
        prototype: HTMLUniMatFArrowDropDownElement;
        new (): HTMLUniMatFArrowDropDownElement;
    };
    interface HTMLUniRotateWrapElement extends Components.UniRotateWrap, HTMLStencilElement {
    }
    var HTMLUniRotateWrapElement: {
        prototype: HTMLUniRotateWrapElement;
        new (): HTMLUniRotateWrapElement;
    };
    interface HTMLUniThemeWrapElement extends Components.UniThemeWrap, HTMLStencilElement {
    }
    var HTMLUniThemeWrapElement: {
        prototype: HTMLUniThemeWrapElement;
        new (): HTMLUniThemeWrapElement;
    };
    interface HTMLUniWrapElement extends Components.UniWrap, HTMLStencilElement {
    }
    var HTMLUniWrapElement: {
        prototype: HTMLUniWrapElement;
        new (): HTMLUniWrapElement;
    };
    interface HTMLElementTagNameMap {
        "uni-fa-styles-load": HTMLUniFaStylesLoadElement;
        "uni-far-copy": HTMLUniFarCopyElement;
        "uni-fas-angle-down": HTMLUniFasAngleDownElement;
        "uni-fas-download": HTMLUniFasDownloadElement;
        "uni-fas-file-download": HTMLUniFasFileDownloadElement;
        "uni-icon-fa": HTMLUniIconFaElement;
        "uni-icon-mat": HTMLUniIconMatElement;
        "uni-icons-fa": HTMLUniIconsFaElement;
        "uni-icons-fa-wrap": HTMLUniIconsFaWrapElement;
        "uni-icons-fab": HTMLUniIconsFabElement;
        "uni-icons-fab-wrap": HTMLUniIconsFabWrapElement;
        "uni-icons-far": HTMLUniIconsFarElement;
        "uni-icons-far-wrap": HTMLUniIconsFarWrapElement;
        "uni-icons-fas": HTMLUniIconsFasElement;
        "uni-icons-fas-wrap": HTMLUniIconsFasWrapElement;
        "uni-icons-mat": HTMLUniIconsMatElement;
        "uni-icons-mat-filled": HTMLUniIconsMatFilledElement;
        "uni-icons-mat-filled-wrap": HTMLUniIconsMatFilledWrapElement;
        "uni-icons-mat-outlined": HTMLUniIconsMatOutlinedElement;
        "uni-icons-mat-outlined-wrap": HTMLUniIconsMatOutlinedWrapElement;
        "uni-icons-mat-round": HTMLUniIconsMatRoundElement;
        "uni-icons-mat-round-wrap": HTMLUniIconsMatRoundWrapElement;
        "uni-icons-mat-sharp": HTMLUniIconsMatSharpElement;
        "uni-icons-mat-sharp-wrap": HTMLUniIconsMatSharpWrapElement;
        "uni-icons-mat-two-tone": HTMLUniIconsMatTwoToneElement;
        "uni-icons-mat-two-tone-wrap": HTMLUniIconsMatTwoToneWrapElement;
        "uni-icons-mat-wrap": HTMLUniIconsMatWrapElement;
        "uni-mat-f-3d-rotation": HTMLUniMatF3dRotationElement;
        "uni-mat-f-add-shopping-cart": HTMLUniMatFAddShoppingCartElement;
        "uni-mat-f-arrow-drop-down": HTMLUniMatFArrowDropDownElement;
        "uni-rotate-wrap": HTMLUniRotateWrapElement;
        "uni-theme-wrap": HTMLUniThemeWrapElement;
        "uni-wrap": HTMLUniWrapElement;
    }
}
declare namespace LocalJSX {
    interface UniFaStylesLoad {
    }
    interface UniFarCopy {
    }
    interface UniFasAngleDown {
    }
    interface UniFasDownload {
    }
    interface UniFasFileDownload {
    }
    interface UniIconFa {
        "color"?: UniColor;
        "degree"?: number;
        "name": string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
        "type"?: UniIconsFaFont;
    }
    interface UniIconMat {
        "color"?: UniColor;
        "degree"?: number;
        "name": string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
        "type"?: UniIconsMatFont;
    }
    interface UniIconsFa {
        "color"?: UniColor;
        "degree"?: number;
        "init"?: boolean;
        "name": string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
        "type"?: UniIconsFaFont;
    }
    interface UniIconsFaWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "degree"?: number;
        "init"?: boolean;
        "name": string;
        "rotate"?: boolean;
        "selector"?: string;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
        "type"?: UniIconsFaFont;
    }
    interface UniIconsFab {
        "color"?: UniColor;
        "degree"?: number;
        "init"?: boolean;
        "name": string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsFabWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "degree"?: number;
        "init"?: boolean;
        "name": string;
        "rotate"?: boolean;
        "selector"?: string;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsFar {
        "color"?: UniColor;
        "degree"?: number;
        "init"?: boolean;
        "name": string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsFarWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "degree"?: number;
        "init"?: boolean;
        "name": string;
        "rotate"?: boolean;
        "selector"?: string;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsFas {
        "color"?: UniColor;
        "degree"?: number;
        "init"?: boolean;
        "name": string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsFasWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "degree"?: number;
        "init"?: boolean;
        "name": string;
        "rotate"?: boolean;
        "selector"?: string;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMat {
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
        "type"?: UniIconsMatFont;
    }
    interface UniIconsMatFilled {
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatFilledWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "selector"?: string;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatOutlined {
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatOutlinedWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "selector"?: string;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatRound {
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatRoundWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "selector"?: string;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatSharp {
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatSharpWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "selector"?: string;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatTwoTone {
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatTwoToneWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "selector"?: string;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniIconsMatWrap {
        "color"?: UniColor;
        "degree"?: number;
        "name"?: string;
        "rotate"?: boolean;
        "size"?: UniSize | number;
        "speed"?: number;
        "steps"?: number;
        "type"?: UniIconsMatFont;
    }
    interface UniMatF3dRotation {
    }
    interface UniMatFAddShoppingCart {
    }
    interface UniMatFArrowDropDown {
    }
    interface UniRotateWrap {
        "all"?: boolean;
        "degree"?: number;
        "selector"?: string;
        "speed"?: number;
        "steps"?: number;
    }
    interface UniThemeWrap {
        "all"?: boolean;
        "color"?: UniColor;
        "filter"?: UniColor;
        "fontSize"?: UniSize | number;
        "selector"?: string;
        "size"?: UniSize | number;
    }
    interface UniWrap {
        "all"?: boolean;
        "classes"?: string;
        "selector"?: string;
    }
    interface IntrinsicElements {
        "uni-fa-styles-load": UniFaStylesLoad;
        "uni-far-copy": UniFarCopy;
        "uni-fas-angle-down": UniFasAngleDown;
        "uni-fas-download": UniFasDownload;
        "uni-fas-file-download": UniFasFileDownload;
        "uni-icon-fa": UniIconFa;
        "uni-icon-mat": UniIconMat;
        "uni-icons-fa": UniIconsFa;
        "uni-icons-fa-wrap": UniIconsFaWrap;
        "uni-icons-fab": UniIconsFab;
        "uni-icons-fab-wrap": UniIconsFabWrap;
        "uni-icons-far": UniIconsFar;
        "uni-icons-far-wrap": UniIconsFarWrap;
        "uni-icons-fas": UniIconsFas;
        "uni-icons-fas-wrap": UniIconsFasWrap;
        "uni-icons-mat": UniIconsMat;
        "uni-icons-mat-filled": UniIconsMatFilled;
        "uni-icons-mat-filled-wrap": UniIconsMatFilledWrap;
        "uni-icons-mat-outlined": UniIconsMatOutlined;
        "uni-icons-mat-outlined-wrap": UniIconsMatOutlinedWrap;
        "uni-icons-mat-round": UniIconsMatRound;
        "uni-icons-mat-round-wrap": UniIconsMatRoundWrap;
        "uni-icons-mat-sharp": UniIconsMatSharp;
        "uni-icons-mat-sharp-wrap": UniIconsMatSharpWrap;
        "uni-icons-mat-two-tone": UniIconsMatTwoTone;
        "uni-icons-mat-two-tone-wrap": UniIconsMatTwoToneWrap;
        "uni-icons-mat-wrap": UniIconsMatWrap;
        "uni-mat-f-3d-rotation": UniMatF3dRotation;
        "uni-mat-f-add-shopping-cart": UniMatFAddShoppingCart;
        "uni-mat-f-arrow-drop-down": UniMatFArrowDropDown;
        "uni-rotate-wrap": UniRotateWrap;
        "uni-theme-wrap": UniThemeWrap;
        "uni-wrap": UniWrap;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "uni-fa-styles-load": LocalJSX.UniFaStylesLoad & JSXBase.HTMLAttributes<HTMLUniFaStylesLoadElement>;
            "uni-far-copy": LocalJSX.UniFarCopy & JSXBase.HTMLAttributes<HTMLUniFarCopyElement>;
            "uni-fas-angle-down": LocalJSX.UniFasAngleDown & JSXBase.HTMLAttributes<HTMLUniFasAngleDownElement>;
            "uni-fas-download": LocalJSX.UniFasDownload & JSXBase.HTMLAttributes<HTMLUniFasDownloadElement>;
            "uni-fas-file-download": LocalJSX.UniFasFileDownload & JSXBase.HTMLAttributes<HTMLUniFasFileDownloadElement>;
            "uni-icon-fa": LocalJSX.UniIconFa & JSXBase.HTMLAttributes<HTMLUniIconFaElement>;
            "uni-icon-mat": LocalJSX.UniIconMat & JSXBase.HTMLAttributes<HTMLUniIconMatElement>;
            "uni-icons-fa": LocalJSX.UniIconsFa & JSXBase.HTMLAttributes<HTMLUniIconsFaElement>;
            "uni-icons-fa-wrap": LocalJSX.UniIconsFaWrap & JSXBase.HTMLAttributes<HTMLUniIconsFaWrapElement>;
            "uni-icons-fab": LocalJSX.UniIconsFab & JSXBase.HTMLAttributes<HTMLUniIconsFabElement>;
            "uni-icons-fab-wrap": LocalJSX.UniIconsFabWrap & JSXBase.HTMLAttributes<HTMLUniIconsFabWrapElement>;
            "uni-icons-far": LocalJSX.UniIconsFar & JSXBase.HTMLAttributes<HTMLUniIconsFarElement>;
            "uni-icons-far-wrap": LocalJSX.UniIconsFarWrap & JSXBase.HTMLAttributes<HTMLUniIconsFarWrapElement>;
            "uni-icons-fas": LocalJSX.UniIconsFas & JSXBase.HTMLAttributes<HTMLUniIconsFasElement>;
            "uni-icons-fas-wrap": LocalJSX.UniIconsFasWrap & JSXBase.HTMLAttributes<HTMLUniIconsFasWrapElement>;
            "uni-icons-mat": LocalJSX.UniIconsMat & JSXBase.HTMLAttributes<HTMLUniIconsMatElement>;
            "uni-icons-mat-filled": LocalJSX.UniIconsMatFilled & JSXBase.HTMLAttributes<HTMLUniIconsMatFilledElement>;
            "uni-icons-mat-filled-wrap": LocalJSX.UniIconsMatFilledWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatFilledWrapElement>;
            "uni-icons-mat-outlined": LocalJSX.UniIconsMatOutlined & JSXBase.HTMLAttributes<HTMLUniIconsMatOutlinedElement>;
            "uni-icons-mat-outlined-wrap": LocalJSX.UniIconsMatOutlinedWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatOutlinedWrapElement>;
            "uni-icons-mat-round": LocalJSX.UniIconsMatRound & JSXBase.HTMLAttributes<HTMLUniIconsMatRoundElement>;
            "uni-icons-mat-round-wrap": LocalJSX.UniIconsMatRoundWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatRoundWrapElement>;
            "uni-icons-mat-sharp": LocalJSX.UniIconsMatSharp & JSXBase.HTMLAttributes<HTMLUniIconsMatSharpElement>;
            "uni-icons-mat-sharp-wrap": LocalJSX.UniIconsMatSharpWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatSharpWrapElement>;
            "uni-icons-mat-two-tone": LocalJSX.UniIconsMatTwoTone & JSXBase.HTMLAttributes<HTMLUniIconsMatTwoToneElement>;
            "uni-icons-mat-two-tone-wrap": LocalJSX.UniIconsMatTwoToneWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatTwoToneWrapElement>;
            "uni-icons-mat-wrap": LocalJSX.UniIconsMatWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatWrapElement>;
            "uni-mat-f-3d-rotation": LocalJSX.UniMatF3dRotation & JSXBase.HTMLAttributes<HTMLUniMatF3dRotationElement>;
            "uni-mat-f-add-shopping-cart": LocalJSX.UniMatFAddShoppingCart & JSXBase.HTMLAttributes<HTMLUniMatFAddShoppingCartElement>;
            "uni-mat-f-arrow-drop-down": LocalJSX.UniMatFArrowDropDown & JSXBase.HTMLAttributes<HTMLUniMatFArrowDropDownElement>;
            "uni-rotate-wrap": LocalJSX.UniRotateWrap & JSXBase.HTMLAttributes<HTMLUniRotateWrapElement>;
            "uni-theme-wrap": LocalJSX.UniThemeWrap & JSXBase.HTMLAttributes<HTMLUniThemeWrapElement>;
            "uni-wrap": LocalJSX.UniWrap & JSXBase.HTMLAttributes<HTMLUniWrapElement>;
        }
    }
}
