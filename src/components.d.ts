/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface UniIconsFilledMat {
    }
    interface UniIconsFilledMatShadow {
    }
    interface UniIconsFilledMatWrap {
        "active": boolean;
        "all": boolean;
        "selector": string;
    }
    interface UniIconsOutlinedMat {
    }
    interface UniIconsOutlinedMatShadow {
    }
    interface UniIconsOutlinedMatWrap {
        "active": boolean;
        "all": boolean;
        "selector": string;
    }
    interface UniIconsRoundMat {
    }
    interface UniIconsRoundMatShadow {
    }
    interface UniIconsRoundMatWrap {
        "active": boolean;
        "all": boolean;
        "selector": string;
    }
    interface UniIconsSharpMat {
    }
    interface UniIconsSharpMatShadow {
    }
    interface UniIconsSharpMatWrap {
        "active": boolean;
        "all": boolean;
        "selector": string;
    }
    interface UniIconsTwoToneMat {
    }
    interface UniIconsTwoToneMatShadow {
    }
    interface UniIconsTwoToneMatWrap {
        "active": boolean;
        "all": boolean;
        "selector": string;
    }
}
declare global {
    interface HTMLUniIconsFilledMatElement extends Components.UniIconsFilledMat, HTMLStencilElement {
    }
    var HTMLUniIconsFilledMatElement: {
        prototype: HTMLUniIconsFilledMatElement;
        new (): HTMLUniIconsFilledMatElement;
    };
    interface HTMLUniIconsFilledMatShadowElement extends Components.UniIconsFilledMatShadow, HTMLStencilElement {
    }
    var HTMLUniIconsFilledMatShadowElement: {
        prototype: HTMLUniIconsFilledMatShadowElement;
        new (): HTMLUniIconsFilledMatShadowElement;
    };
    interface HTMLUniIconsFilledMatWrapElement extends Components.UniIconsFilledMatWrap, HTMLStencilElement {
    }
    var HTMLUniIconsFilledMatWrapElement: {
        prototype: HTMLUniIconsFilledMatWrapElement;
        new (): HTMLUniIconsFilledMatWrapElement;
    };
    interface HTMLUniIconsOutlinedMatElement extends Components.UniIconsOutlinedMat, HTMLStencilElement {
    }
    var HTMLUniIconsOutlinedMatElement: {
        prototype: HTMLUniIconsOutlinedMatElement;
        new (): HTMLUniIconsOutlinedMatElement;
    };
    interface HTMLUniIconsOutlinedMatShadowElement extends Components.UniIconsOutlinedMatShadow, HTMLStencilElement {
    }
    var HTMLUniIconsOutlinedMatShadowElement: {
        prototype: HTMLUniIconsOutlinedMatShadowElement;
        new (): HTMLUniIconsOutlinedMatShadowElement;
    };
    interface HTMLUniIconsOutlinedMatWrapElement extends Components.UniIconsOutlinedMatWrap, HTMLStencilElement {
    }
    var HTMLUniIconsOutlinedMatWrapElement: {
        prototype: HTMLUniIconsOutlinedMatWrapElement;
        new (): HTMLUniIconsOutlinedMatWrapElement;
    };
    interface HTMLUniIconsRoundMatElement extends Components.UniIconsRoundMat, HTMLStencilElement {
    }
    var HTMLUniIconsRoundMatElement: {
        prototype: HTMLUniIconsRoundMatElement;
        new (): HTMLUniIconsRoundMatElement;
    };
    interface HTMLUniIconsRoundMatShadowElement extends Components.UniIconsRoundMatShadow, HTMLStencilElement {
    }
    var HTMLUniIconsRoundMatShadowElement: {
        prototype: HTMLUniIconsRoundMatShadowElement;
        new (): HTMLUniIconsRoundMatShadowElement;
    };
    interface HTMLUniIconsRoundMatWrapElement extends Components.UniIconsRoundMatWrap, HTMLStencilElement {
    }
    var HTMLUniIconsRoundMatWrapElement: {
        prototype: HTMLUniIconsRoundMatWrapElement;
        new (): HTMLUniIconsRoundMatWrapElement;
    };
    interface HTMLUniIconsSharpMatElement extends Components.UniIconsSharpMat, HTMLStencilElement {
    }
    var HTMLUniIconsSharpMatElement: {
        prototype: HTMLUniIconsSharpMatElement;
        new (): HTMLUniIconsSharpMatElement;
    };
    interface HTMLUniIconsSharpMatShadowElement extends Components.UniIconsSharpMatShadow, HTMLStencilElement {
    }
    var HTMLUniIconsSharpMatShadowElement: {
        prototype: HTMLUniIconsSharpMatShadowElement;
        new (): HTMLUniIconsSharpMatShadowElement;
    };
    interface HTMLUniIconsSharpMatWrapElement extends Components.UniIconsSharpMatWrap, HTMLStencilElement {
    }
    var HTMLUniIconsSharpMatWrapElement: {
        prototype: HTMLUniIconsSharpMatWrapElement;
        new (): HTMLUniIconsSharpMatWrapElement;
    };
    interface HTMLUniIconsTwoToneMatElement extends Components.UniIconsTwoToneMat, HTMLStencilElement {
    }
    var HTMLUniIconsTwoToneMatElement: {
        prototype: HTMLUniIconsTwoToneMatElement;
        new (): HTMLUniIconsTwoToneMatElement;
    };
    interface HTMLUniIconsTwoToneMatShadowElement extends Components.UniIconsTwoToneMatShadow, HTMLStencilElement {
    }
    var HTMLUniIconsTwoToneMatShadowElement: {
        prototype: HTMLUniIconsTwoToneMatShadowElement;
        new (): HTMLUniIconsTwoToneMatShadowElement;
    };
    interface HTMLUniIconsTwoToneMatWrapElement extends Components.UniIconsTwoToneMatWrap, HTMLStencilElement {
    }
    var HTMLUniIconsTwoToneMatWrapElement: {
        prototype: HTMLUniIconsTwoToneMatWrapElement;
        new (): HTMLUniIconsTwoToneMatWrapElement;
    };
    interface HTMLElementTagNameMap {
        "uni-icons-filled-mat": HTMLUniIconsFilledMatElement;
        "uni-icons-filled-mat-shadow": HTMLUniIconsFilledMatShadowElement;
        "uni-icons-filled-mat-wrap": HTMLUniIconsFilledMatWrapElement;
        "uni-icons-outlined-mat": HTMLUniIconsOutlinedMatElement;
        "uni-icons-outlined-mat-shadow": HTMLUniIconsOutlinedMatShadowElement;
        "uni-icons-outlined-mat-wrap": HTMLUniIconsOutlinedMatWrapElement;
        "uni-icons-round-mat": HTMLUniIconsRoundMatElement;
        "uni-icons-round-mat-shadow": HTMLUniIconsRoundMatShadowElement;
        "uni-icons-round-mat-wrap": HTMLUniIconsRoundMatWrapElement;
        "uni-icons-sharp-mat": HTMLUniIconsSharpMatElement;
        "uni-icons-sharp-mat-shadow": HTMLUniIconsSharpMatShadowElement;
        "uni-icons-sharp-mat-wrap": HTMLUniIconsSharpMatWrapElement;
        "uni-icons-two-tone-mat": HTMLUniIconsTwoToneMatElement;
        "uni-icons-two-tone-mat-shadow": HTMLUniIconsTwoToneMatShadowElement;
        "uni-icons-two-tone-mat-wrap": HTMLUniIconsTwoToneMatWrapElement;
    }
}
declare namespace LocalJSX {
    interface UniIconsFilledMat {
    }
    interface UniIconsFilledMatShadow {
    }
    interface UniIconsFilledMatWrap {
        "active"?: boolean;
        "all"?: boolean;
        "selector"?: string;
    }
    interface UniIconsOutlinedMat {
    }
    interface UniIconsOutlinedMatShadow {
    }
    interface UniIconsOutlinedMatWrap {
        "active"?: boolean;
        "all"?: boolean;
        "selector"?: string;
    }
    interface UniIconsRoundMat {
    }
    interface UniIconsRoundMatShadow {
    }
    interface UniIconsRoundMatWrap {
        "active"?: boolean;
        "all"?: boolean;
        "selector"?: string;
    }
    interface UniIconsSharpMat {
    }
    interface UniIconsSharpMatShadow {
    }
    interface UniIconsSharpMatWrap {
        "active"?: boolean;
        "all"?: boolean;
        "selector"?: string;
    }
    interface UniIconsTwoToneMat {
    }
    interface UniIconsTwoToneMatShadow {
    }
    interface UniIconsTwoToneMatWrap {
        "active"?: boolean;
        "all"?: boolean;
        "selector"?: string;
    }
    interface IntrinsicElements {
        "uni-icons-filled-mat": UniIconsFilledMat;
        "uni-icons-filled-mat-shadow": UniIconsFilledMatShadow;
        "uni-icons-filled-mat-wrap": UniIconsFilledMatWrap;
        "uni-icons-outlined-mat": UniIconsOutlinedMat;
        "uni-icons-outlined-mat-shadow": UniIconsOutlinedMatShadow;
        "uni-icons-outlined-mat-wrap": UniIconsOutlinedMatWrap;
        "uni-icons-round-mat": UniIconsRoundMat;
        "uni-icons-round-mat-shadow": UniIconsRoundMatShadow;
        "uni-icons-round-mat-wrap": UniIconsRoundMatWrap;
        "uni-icons-sharp-mat": UniIconsSharpMat;
        "uni-icons-sharp-mat-shadow": UniIconsSharpMatShadow;
        "uni-icons-sharp-mat-wrap": UniIconsSharpMatWrap;
        "uni-icons-two-tone-mat": UniIconsTwoToneMat;
        "uni-icons-two-tone-mat-shadow": UniIconsTwoToneMatShadow;
        "uni-icons-two-tone-mat-wrap": UniIconsTwoToneMatWrap;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "uni-icons-filled-mat": LocalJSX.UniIconsFilledMat & JSXBase.HTMLAttributes<HTMLUniIconsFilledMatElement>;
            "uni-icons-filled-mat-shadow": LocalJSX.UniIconsFilledMatShadow & JSXBase.HTMLAttributes<HTMLUniIconsFilledMatShadowElement>;
            "uni-icons-filled-mat-wrap": LocalJSX.UniIconsFilledMatWrap & JSXBase.HTMLAttributes<HTMLUniIconsFilledMatWrapElement>;
            "uni-icons-outlined-mat": LocalJSX.UniIconsOutlinedMat & JSXBase.HTMLAttributes<HTMLUniIconsOutlinedMatElement>;
            "uni-icons-outlined-mat-shadow": LocalJSX.UniIconsOutlinedMatShadow & JSXBase.HTMLAttributes<HTMLUniIconsOutlinedMatShadowElement>;
            "uni-icons-outlined-mat-wrap": LocalJSX.UniIconsOutlinedMatWrap & JSXBase.HTMLAttributes<HTMLUniIconsOutlinedMatWrapElement>;
            "uni-icons-round-mat": LocalJSX.UniIconsRoundMat & JSXBase.HTMLAttributes<HTMLUniIconsRoundMatElement>;
            "uni-icons-round-mat-shadow": LocalJSX.UniIconsRoundMatShadow & JSXBase.HTMLAttributes<HTMLUniIconsRoundMatShadowElement>;
            "uni-icons-round-mat-wrap": LocalJSX.UniIconsRoundMatWrap & JSXBase.HTMLAttributes<HTMLUniIconsRoundMatWrapElement>;
            "uni-icons-sharp-mat": LocalJSX.UniIconsSharpMat & JSXBase.HTMLAttributes<HTMLUniIconsSharpMatElement>;
            "uni-icons-sharp-mat-shadow": LocalJSX.UniIconsSharpMatShadow & JSXBase.HTMLAttributes<HTMLUniIconsSharpMatShadowElement>;
            "uni-icons-sharp-mat-wrap": LocalJSX.UniIconsSharpMatWrap & JSXBase.HTMLAttributes<HTMLUniIconsSharpMatWrapElement>;
            "uni-icons-two-tone-mat": LocalJSX.UniIconsTwoToneMat & JSXBase.HTMLAttributes<HTMLUniIconsTwoToneMatElement>;
            "uni-icons-two-tone-mat-shadow": LocalJSX.UniIconsTwoToneMatShadow & JSXBase.HTMLAttributes<HTMLUniIconsTwoToneMatShadowElement>;
            "uni-icons-two-tone-mat-wrap": LocalJSX.UniIconsTwoToneMatWrap & JSXBase.HTMLAttributes<HTMLUniIconsTwoToneMatWrapElement>;
        }
    }
}
