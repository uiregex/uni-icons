/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { UniColor } from "./models";
import { UniIconsFaMode } from "./components/fa/icons/models";
import { UniIconsMatMode } from "./components/mat/icons/models";
export namespace Components {
    interface UniIconFa {
        "color": UniColor;
        "name": string;
    }
    interface UniIconFaCopy {
        "color": string;
        "size": string;
    }
    interface UniIconFaDownload {
        "color": string;
        "size": string;
    }
    interface UniIconFaFileDownload {
        "color": string;
        "size": string;
    }
    interface UniIconMat {
        "color": UniColor;
        "name": string;
    }
    interface UniIconMat3dRotation {
        "color": UniColor;
    }
    interface UniIconMatArrowDropDown {
        "color": UniColor;
    }
    interface UniIconsFa {
        "color": UniColor;
        "mode": UniIconsFaMode;
        "name": string;
    }
    interface UniIconsFaBrands {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsFaBrandsShadow {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsFaBrandsWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "name": string;
        "selector": string;
    }
    interface UniIconsFaCommon {
    }
    interface UniIconsFaRegular {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsFaRegularShadow {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsFaRegularWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "name": string;
        "selector": string;
    }
    interface UniIconsFaShadow {
        "color": UniColor;
        "mode": UniIconsFaMode;
        "name": string;
    }
    interface UniIconsFaSolid {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsFaSolidShadow {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsFaSolidWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "name": string;
        "selector": string;
    }
    interface UniIconsFaWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "mode": UniIconsFaMode;
        "name": string;
        "selector": string;
    }
    interface UniIconsMat {
        "color": UniColor;
        "mode": UniIconsMatMode;
        "name": string;
    }
    interface UniIconsMatCommon {
    }
    interface UniIconsMatFilled {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatFilledShadow {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatFilledWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "name": string;
        "selector": string;
    }
    interface UniIconsMatOutlined {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatOutlinedShadow {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatOutlinedWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "name": string;
        "selector": string;
    }
    interface UniIconsMatRound {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatRoundShadow {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatRoundWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "name": string;
        "selector": string;
    }
    interface UniIconsMatShadow {
        "color": UniColor;
        "mode": UniIconsMatMode;
        "name": string;
    }
    interface UniIconsMatSharp {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatSharpShadow {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatSharpWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "name": string;
        "selector": string;
    }
    interface UniIconsMatTwoTone {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatTwoToneShadow {
        "color": UniColor;
        "name": string;
    }
    interface UniIconsMatTwoToneWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "name": string;
        "selector": string;
    }
    interface UniIconsMatWrap {
        "active": boolean;
        "all": boolean;
        "color": UniColor;
        "mode": UniIconsMatMode;
        "name": string;
        "selector": string;
    }
}
declare global {
    interface HTMLUniIconFaElement extends Components.UniIconFa, HTMLStencilElement {
    }
    var HTMLUniIconFaElement: {
        prototype: HTMLUniIconFaElement;
        new (): HTMLUniIconFaElement;
    };
    interface HTMLUniIconFaCopyElement extends Components.UniIconFaCopy, HTMLStencilElement {
    }
    var HTMLUniIconFaCopyElement: {
        prototype: HTMLUniIconFaCopyElement;
        new (): HTMLUniIconFaCopyElement;
    };
    interface HTMLUniIconFaDownloadElement extends Components.UniIconFaDownload, HTMLStencilElement {
    }
    var HTMLUniIconFaDownloadElement: {
        prototype: HTMLUniIconFaDownloadElement;
        new (): HTMLUniIconFaDownloadElement;
    };
    interface HTMLUniIconFaFileDownloadElement extends Components.UniIconFaFileDownload, HTMLStencilElement {
    }
    var HTMLUniIconFaFileDownloadElement: {
        prototype: HTMLUniIconFaFileDownloadElement;
        new (): HTMLUniIconFaFileDownloadElement;
    };
    interface HTMLUniIconMatElement extends Components.UniIconMat, HTMLStencilElement {
    }
    var HTMLUniIconMatElement: {
        prototype: HTMLUniIconMatElement;
        new (): HTMLUniIconMatElement;
    };
    interface HTMLUniIconMat3dRotationElement extends Components.UniIconMat3dRotation, HTMLStencilElement {
    }
    var HTMLUniIconMat3dRotationElement: {
        prototype: HTMLUniIconMat3dRotationElement;
        new (): HTMLUniIconMat3dRotationElement;
    };
    interface HTMLUniIconMatArrowDropDownElement extends Components.UniIconMatArrowDropDown, HTMLStencilElement {
    }
    var HTMLUniIconMatArrowDropDownElement: {
        prototype: HTMLUniIconMatArrowDropDownElement;
        new (): HTMLUniIconMatArrowDropDownElement;
    };
    interface HTMLUniIconsFaElement extends Components.UniIconsFa, HTMLStencilElement {
    }
    var HTMLUniIconsFaElement: {
        prototype: HTMLUniIconsFaElement;
        new (): HTMLUniIconsFaElement;
    };
    interface HTMLUniIconsFaBrandsElement extends Components.UniIconsFaBrands, HTMLStencilElement {
    }
    var HTMLUniIconsFaBrandsElement: {
        prototype: HTMLUniIconsFaBrandsElement;
        new (): HTMLUniIconsFaBrandsElement;
    };
    interface HTMLUniIconsFaBrandsShadowElement extends Components.UniIconsFaBrandsShadow, HTMLStencilElement {
    }
    var HTMLUniIconsFaBrandsShadowElement: {
        prototype: HTMLUniIconsFaBrandsShadowElement;
        new (): HTMLUniIconsFaBrandsShadowElement;
    };
    interface HTMLUniIconsFaBrandsWrapElement extends Components.UniIconsFaBrandsWrap, HTMLStencilElement {
    }
    var HTMLUniIconsFaBrandsWrapElement: {
        prototype: HTMLUniIconsFaBrandsWrapElement;
        new (): HTMLUniIconsFaBrandsWrapElement;
    };
    interface HTMLUniIconsFaCommonElement extends Components.UniIconsFaCommon, HTMLStencilElement {
    }
    var HTMLUniIconsFaCommonElement: {
        prototype: HTMLUniIconsFaCommonElement;
        new (): HTMLUniIconsFaCommonElement;
    };
    interface HTMLUniIconsFaRegularElement extends Components.UniIconsFaRegular, HTMLStencilElement {
    }
    var HTMLUniIconsFaRegularElement: {
        prototype: HTMLUniIconsFaRegularElement;
        new (): HTMLUniIconsFaRegularElement;
    };
    interface HTMLUniIconsFaRegularShadowElement extends Components.UniIconsFaRegularShadow, HTMLStencilElement {
    }
    var HTMLUniIconsFaRegularShadowElement: {
        prototype: HTMLUniIconsFaRegularShadowElement;
        new (): HTMLUniIconsFaRegularShadowElement;
    };
    interface HTMLUniIconsFaRegularWrapElement extends Components.UniIconsFaRegularWrap, HTMLStencilElement {
    }
    var HTMLUniIconsFaRegularWrapElement: {
        prototype: HTMLUniIconsFaRegularWrapElement;
        new (): HTMLUniIconsFaRegularWrapElement;
    };
    interface HTMLUniIconsFaShadowElement extends Components.UniIconsFaShadow, HTMLStencilElement {
    }
    var HTMLUniIconsFaShadowElement: {
        prototype: HTMLUniIconsFaShadowElement;
        new (): HTMLUniIconsFaShadowElement;
    };
    interface HTMLUniIconsFaSolidElement extends Components.UniIconsFaSolid, HTMLStencilElement {
    }
    var HTMLUniIconsFaSolidElement: {
        prototype: HTMLUniIconsFaSolidElement;
        new (): HTMLUniIconsFaSolidElement;
    };
    interface HTMLUniIconsFaSolidShadowElement extends Components.UniIconsFaSolidShadow, HTMLStencilElement {
    }
    var HTMLUniIconsFaSolidShadowElement: {
        prototype: HTMLUniIconsFaSolidShadowElement;
        new (): HTMLUniIconsFaSolidShadowElement;
    };
    interface HTMLUniIconsFaSolidWrapElement extends Components.UniIconsFaSolidWrap, HTMLStencilElement {
    }
    var HTMLUniIconsFaSolidWrapElement: {
        prototype: HTMLUniIconsFaSolidWrapElement;
        new (): HTMLUniIconsFaSolidWrapElement;
    };
    interface HTMLUniIconsFaWrapElement extends Components.UniIconsFaWrap, HTMLStencilElement {
    }
    var HTMLUniIconsFaWrapElement: {
        prototype: HTMLUniIconsFaWrapElement;
        new (): HTMLUniIconsFaWrapElement;
    };
    interface HTMLUniIconsMatElement extends Components.UniIconsMat, HTMLStencilElement {
    }
    var HTMLUniIconsMatElement: {
        prototype: HTMLUniIconsMatElement;
        new (): HTMLUniIconsMatElement;
    };
    interface HTMLUniIconsMatCommonElement extends Components.UniIconsMatCommon, HTMLStencilElement {
    }
    var HTMLUniIconsMatCommonElement: {
        prototype: HTMLUniIconsMatCommonElement;
        new (): HTMLUniIconsMatCommonElement;
    };
    interface HTMLUniIconsMatFilledElement extends Components.UniIconsMatFilled, HTMLStencilElement {
    }
    var HTMLUniIconsMatFilledElement: {
        prototype: HTMLUniIconsMatFilledElement;
        new (): HTMLUniIconsMatFilledElement;
    };
    interface HTMLUniIconsMatFilledShadowElement extends Components.UniIconsMatFilledShadow, HTMLStencilElement {
    }
    var HTMLUniIconsMatFilledShadowElement: {
        prototype: HTMLUniIconsMatFilledShadowElement;
        new (): HTMLUniIconsMatFilledShadowElement;
    };
    interface HTMLUniIconsMatFilledWrapElement extends Components.UniIconsMatFilledWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatFilledWrapElement: {
        prototype: HTMLUniIconsMatFilledWrapElement;
        new (): HTMLUniIconsMatFilledWrapElement;
    };
    interface HTMLUniIconsMatOutlinedElement extends Components.UniIconsMatOutlined, HTMLStencilElement {
    }
    var HTMLUniIconsMatOutlinedElement: {
        prototype: HTMLUniIconsMatOutlinedElement;
        new (): HTMLUniIconsMatOutlinedElement;
    };
    interface HTMLUniIconsMatOutlinedShadowElement extends Components.UniIconsMatOutlinedShadow, HTMLStencilElement {
    }
    var HTMLUniIconsMatOutlinedShadowElement: {
        prototype: HTMLUniIconsMatOutlinedShadowElement;
        new (): HTMLUniIconsMatOutlinedShadowElement;
    };
    interface HTMLUniIconsMatOutlinedWrapElement extends Components.UniIconsMatOutlinedWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatOutlinedWrapElement: {
        prototype: HTMLUniIconsMatOutlinedWrapElement;
        new (): HTMLUniIconsMatOutlinedWrapElement;
    };
    interface HTMLUniIconsMatRoundElement extends Components.UniIconsMatRound, HTMLStencilElement {
    }
    var HTMLUniIconsMatRoundElement: {
        prototype: HTMLUniIconsMatRoundElement;
        new (): HTMLUniIconsMatRoundElement;
    };
    interface HTMLUniIconsMatRoundShadowElement extends Components.UniIconsMatRoundShadow, HTMLStencilElement {
    }
    var HTMLUniIconsMatRoundShadowElement: {
        prototype: HTMLUniIconsMatRoundShadowElement;
        new (): HTMLUniIconsMatRoundShadowElement;
    };
    interface HTMLUniIconsMatRoundWrapElement extends Components.UniIconsMatRoundWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatRoundWrapElement: {
        prototype: HTMLUniIconsMatRoundWrapElement;
        new (): HTMLUniIconsMatRoundWrapElement;
    };
    interface HTMLUniIconsMatShadowElement extends Components.UniIconsMatShadow, HTMLStencilElement {
    }
    var HTMLUniIconsMatShadowElement: {
        prototype: HTMLUniIconsMatShadowElement;
        new (): HTMLUniIconsMatShadowElement;
    };
    interface HTMLUniIconsMatSharpElement extends Components.UniIconsMatSharp, HTMLStencilElement {
    }
    var HTMLUniIconsMatSharpElement: {
        prototype: HTMLUniIconsMatSharpElement;
        new (): HTMLUniIconsMatSharpElement;
    };
    interface HTMLUniIconsMatSharpShadowElement extends Components.UniIconsMatSharpShadow, HTMLStencilElement {
    }
    var HTMLUniIconsMatSharpShadowElement: {
        prototype: HTMLUniIconsMatSharpShadowElement;
        new (): HTMLUniIconsMatSharpShadowElement;
    };
    interface HTMLUniIconsMatSharpWrapElement extends Components.UniIconsMatSharpWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatSharpWrapElement: {
        prototype: HTMLUniIconsMatSharpWrapElement;
        new (): HTMLUniIconsMatSharpWrapElement;
    };
    interface HTMLUniIconsMatTwoToneElement extends Components.UniIconsMatTwoTone, HTMLStencilElement {
    }
    var HTMLUniIconsMatTwoToneElement: {
        prototype: HTMLUniIconsMatTwoToneElement;
        new (): HTMLUniIconsMatTwoToneElement;
    };
    interface HTMLUniIconsMatTwoToneShadowElement extends Components.UniIconsMatTwoToneShadow, HTMLStencilElement {
    }
    var HTMLUniIconsMatTwoToneShadowElement: {
        prototype: HTMLUniIconsMatTwoToneShadowElement;
        new (): HTMLUniIconsMatTwoToneShadowElement;
    };
    interface HTMLUniIconsMatTwoToneWrapElement extends Components.UniIconsMatTwoToneWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatTwoToneWrapElement: {
        prototype: HTMLUniIconsMatTwoToneWrapElement;
        new (): HTMLUniIconsMatTwoToneWrapElement;
    };
    interface HTMLUniIconsMatWrapElement extends Components.UniIconsMatWrap, HTMLStencilElement {
    }
    var HTMLUniIconsMatWrapElement: {
        prototype: HTMLUniIconsMatWrapElement;
        new (): HTMLUniIconsMatWrapElement;
    };
    interface HTMLElementTagNameMap {
        "uni-icon-fa": HTMLUniIconFaElement;
        "uni-icon-fa-copy": HTMLUniIconFaCopyElement;
        "uni-icon-fa-download": HTMLUniIconFaDownloadElement;
        "uni-icon-fa-file-download": HTMLUniIconFaFileDownloadElement;
        "uni-icon-mat": HTMLUniIconMatElement;
        "uni-icon-mat-3d-rotation": HTMLUniIconMat3dRotationElement;
        "uni-icon-mat-arrow-drop-down": HTMLUniIconMatArrowDropDownElement;
        "uni-icons-fa": HTMLUniIconsFaElement;
        "uni-icons-fa-brands": HTMLUniIconsFaBrandsElement;
        "uni-icons-fa-brands-shadow": HTMLUniIconsFaBrandsShadowElement;
        "uni-icons-fa-brands-wrap": HTMLUniIconsFaBrandsWrapElement;
        "uni-icons-fa-common": HTMLUniIconsFaCommonElement;
        "uni-icons-fa-regular": HTMLUniIconsFaRegularElement;
        "uni-icons-fa-regular-shadow": HTMLUniIconsFaRegularShadowElement;
        "uni-icons-fa-regular-wrap": HTMLUniIconsFaRegularWrapElement;
        "uni-icons-fa-shadow": HTMLUniIconsFaShadowElement;
        "uni-icons-fa-solid": HTMLUniIconsFaSolidElement;
        "uni-icons-fa-solid-shadow": HTMLUniIconsFaSolidShadowElement;
        "uni-icons-fa-solid-wrap": HTMLUniIconsFaSolidWrapElement;
        "uni-icons-fa-wrap": HTMLUniIconsFaWrapElement;
        "uni-icons-mat": HTMLUniIconsMatElement;
        "uni-icons-mat-common": HTMLUniIconsMatCommonElement;
        "uni-icons-mat-filled": HTMLUniIconsMatFilledElement;
        "uni-icons-mat-filled-shadow": HTMLUniIconsMatFilledShadowElement;
        "uni-icons-mat-filled-wrap": HTMLUniIconsMatFilledWrapElement;
        "uni-icons-mat-outlined": HTMLUniIconsMatOutlinedElement;
        "uni-icons-mat-outlined-shadow": HTMLUniIconsMatOutlinedShadowElement;
        "uni-icons-mat-outlined-wrap": HTMLUniIconsMatOutlinedWrapElement;
        "uni-icons-mat-round": HTMLUniIconsMatRoundElement;
        "uni-icons-mat-round-shadow": HTMLUniIconsMatRoundShadowElement;
        "uni-icons-mat-round-wrap": HTMLUniIconsMatRoundWrapElement;
        "uni-icons-mat-shadow": HTMLUniIconsMatShadowElement;
        "uni-icons-mat-sharp": HTMLUniIconsMatSharpElement;
        "uni-icons-mat-sharp-shadow": HTMLUniIconsMatSharpShadowElement;
        "uni-icons-mat-sharp-wrap": HTMLUniIconsMatSharpWrapElement;
        "uni-icons-mat-two-tone": HTMLUniIconsMatTwoToneElement;
        "uni-icons-mat-two-tone-shadow": HTMLUniIconsMatTwoToneShadowElement;
        "uni-icons-mat-two-tone-wrap": HTMLUniIconsMatTwoToneWrapElement;
        "uni-icons-mat-wrap": HTMLUniIconsMatWrapElement;
    }
}
declare namespace LocalJSX {
    interface UniIconFa {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconFaCopy {
        "color"?: string;
        "size"?: string;
    }
    interface UniIconFaDownload {
        "color"?: string;
        "size"?: string;
    }
    interface UniIconFaFileDownload {
        "color"?: string;
        "size"?: string;
    }
    interface UniIconMat {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconMat3dRotation {
        "color"?: UniColor;
    }
    interface UniIconMatArrowDropDown {
        "color"?: UniColor;
    }
    interface UniIconsFa {
        "color"?: UniColor;
        "mode"?: UniIconsFaMode;
        "name": string;
    }
    interface UniIconsFaBrands {
        "color"?: UniColor;
        "name": string;
    }
    interface UniIconsFaBrandsShadow {
        "color"?: UniColor;
        "name": string;
    }
    interface UniIconsFaBrandsWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "name": string;
        "selector"?: string;
    }
    interface UniIconsFaCommon {
    }
    interface UniIconsFaRegular {
        "color"?: UniColor;
        "name": string;
    }
    interface UniIconsFaRegularShadow {
        "color"?: UniColor;
        "name": string;
    }
    interface UniIconsFaRegularWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "name": string;
        "selector"?: string;
    }
    interface UniIconsFaShadow {
        "color"?: UniColor;
        "mode"?: UniIconsFaMode;
        "name": string;
    }
    interface UniIconsFaSolid {
        "color"?: UniColor;
        "name": string;
    }
    interface UniIconsFaSolidShadow {
        "color"?: UniColor;
        "name": string;
    }
    interface UniIconsFaSolidWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "name": string;
        "selector"?: string;
    }
    interface UniIconsFaWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "mode"?: UniIconsFaMode;
        "name": string;
        "selector"?: string;
    }
    interface UniIconsMat {
        "color"?: UniColor;
        "mode"?: UniIconsMatMode;
        "name"?: string;
    }
    interface UniIconsMatCommon {
    }
    interface UniIconsMatFilled {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatFilledShadow {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatFilledWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "name"?: string;
        "selector"?: string;
    }
    interface UniIconsMatOutlined {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatOutlinedShadow {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatOutlinedWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "name"?: string;
        "selector"?: string;
    }
    interface UniIconsMatRound {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatRoundShadow {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatRoundWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "name"?: string;
        "selector"?: string;
    }
    interface UniIconsMatShadow {
        "color"?: UniColor;
        "mode"?: UniIconsMatMode;
        "name"?: string;
    }
    interface UniIconsMatSharp {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatSharpShadow {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatSharpWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "name"?: string;
        "selector"?: string;
    }
    interface UniIconsMatTwoTone {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatTwoToneShadow {
        "color"?: UniColor;
        "name"?: string;
    }
    interface UniIconsMatTwoToneWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "name"?: string;
        "selector"?: string;
    }
    interface UniIconsMatWrap {
        "active"?: boolean;
        "all"?: boolean;
        "color"?: UniColor;
        "mode"?: UniIconsMatMode;
        "name"?: string;
        "selector"?: string;
    }
    interface IntrinsicElements {
        "uni-icon-fa": UniIconFa;
        "uni-icon-fa-copy": UniIconFaCopy;
        "uni-icon-fa-download": UniIconFaDownload;
        "uni-icon-fa-file-download": UniIconFaFileDownload;
        "uni-icon-mat": UniIconMat;
        "uni-icon-mat-3d-rotation": UniIconMat3dRotation;
        "uni-icon-mat-arrow-drop-down": UniIconMatArrowDropDown;
        "uni-icons-fa": UniIconsFa;
        "uni-icons-fa-brands": UniIconsFaBrands;
        "uni-icons-fa-brands-shadow": UniIconsFaBrandsShadow;
        "uni-icons-fa-brands-wrap": UniIconsFaBrandsWrap;
        "uni-icons-fa-common": UniIconsFaCommon;
        "uni-icons-fa-regular": UniIconsFaRegular;
        "uni-icons-fa-regular-shadow": UniIconsFaRegularShadow;
        "uni-icons-fa-regular-wrap": UniIconsFaRegularWrap;
        "uni-icons-fa-shadow": UniIconsFaShadow;
        "uni-icons-fa-solid": UniIconsFaSolid;
        "uni-icons-fa-solid-shadow": UniIconsFaSolidShadow;
        "uni-icons-fa-solid-wrap": UniIconsFaSolidWrap;
        "uni-icons-fa-wrap": UniIconsFaWrap;
        "uni-icons-mat": UniIconsMat;
        "uni-icons-mat-common": UniIconsMatCommon;
        "uni-icons-mat-filled": UniIconsMatFilled;
        "uni-icons-mat-filled-shadow": UniIconsMatFilledShadow;
        "uni-icons-mat-filled-wrap": UniIconsMatFilledWrap;
        "uni-icons-mat-outlined": UniIconsMatOutlined;
        "uni-icons-mat-outlined-shadow": UniIconsMatOutlinedShadow;
        "uni-icons-mat-outlined-wrap": UniIconsMatOutlinedWrap;
        "uni-icons-mat-round": UniIconsMatRound;
        "uni-icons-mat-round-shadow": UniIconsMatRoundShadow;
        "uni-icons-mat-round-wrap": UniIconsMatRoundWrap;
        "uni-icons-mat-shadow": UniIconsMatShadow;
        "uni-icons-mat-sharp": UniIconsMatSharp;
        "uni-icons-mat-sharp-shadow": UniIconsMatSharpShadow;
        "uni-icons-mat-sharp-wrap": UniIconsMatSharpWrap;
        "uni-icons-mat-two-tone": UniIconsMatTwoTone;
        "uni-icons-mat-two-tone-shadow": UniIconsMatTwoToneShadow;
        "uni-icons-mat-two-tone-wrap": UniIconsMatTwoToneWrap;
        "uni-icons-mat-wrap": UniIconsMatWrap;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "uni-icon-fa": LocalJSX.UniIconFa & JSXBase.HTMLAttributes<HTMLUniIconFaElement>;
            "uni-icon-fa-copy": LocalJSX.UniIconFaCopy & JSXBase.HTMLAttributes<HTMLUniIconFaCopyElement>;
            "uni-icon-fa-download": LocalJSX.UniIconFaDownload & JSXBase.HTMLAttributes<HTMLUniIconFaDownloadElement>;
            "uni-icon-fa-file-download": LocalJSX.UniIconFaFileDownload & JSXBase.HTMLAttributes<HTMLUniIconFaFileDownloadElement>;
            "uni-icon-mat": LocalJSX.UniIconMat & JSXBase.HTMLAttributes<HTMLUniIconMatElement>;
            "uni-icon-mat-3d-rotation": LocalJSX.UniIconMat3dRotation & JSXBase.HTMLAttributes<HTMLUniIconMat3dRotationElement>;
            "uni-icon-mat-arrow-drop-down": LocalJSX.UniIconMatArrowDropDown & JSXBase.HTMLAttributes<HTMLUniIconMatArrowDropDownElement>;
            "uni-icons-fa": LocalJSX.UniIconsFa & JSXBase.HTMLAttributes<HTMLUniIconsFaElement>;
            "uni-icons-fa-brands": LocalJSX.UniIconsFaBrands & JSXBase.HTMLAttributes<HTMLUniIconsFaBrandsElement>;
            "uni-icons-fa-brands-shadow": LocalJSX.UniIconsFaBrandsShadow & JSXBase.HTMLAttributes<HTMLUniIconsFaBrandsShadowElement>;
            "uni-icons-fa-brands-wrap": LocalJSX.UniIconsFaBrandsWrap & JSXBase.HTMLAttributes<HTMLUniIconsFaBrandsWrapElement>;
            "uni-icons-fa-common": LocalJSX.UniIconsFaCommon & JSXBase.HTMLAttributes<HTMLUniIconsFaCommonElement>;
            "uni-icons-fa-regular": LocalJSX.UniIconsFaRegular & JSXBase.HTMLAttributes<HTMLUniIconsFaRegularElement>;
            "uni-icons-fa-regular-shadow": LocalJSX.UniIconsFaRegularShadow & JSXBase.HTMLAttributes<HTMLUniIconsFaRegularShadowElement>;
            "uni-icons-fa-regular-wrap": LocalJSX.UniIconsFaRegularWrap & JSXBase.HTMLAttributes<HTMLUniIconsFaRegularWrapElement>;
            "uni-icons-fa-shadow": LocalJSX.UniIconsFaShadow & JSXBase.HTMLAttributes<HTMLUniIconsFaShadowElement>;
            "uni-icons-fa-solid": LocalJSX.UniIconsFaSolid & JSXBase.HTMLAttributes<HTMLUniIconsFaSolidElement>;
            "uni-icons-fa-solid-shadow": LocalJSX.UniIconsFaSolidShadow & JSXBase.HTMLAttributes<HTMLUniIconsFaSolidShadowElement>;
            "uni-icons-fa-solid-wrap": LocalJSX.UniIconsFaSolidWrap & JSXBase.HTMLAttributes<HTMLUniIconsFaSolidWrapElement>;
            "uni-icons-fa-wrap": LocalJSX.UniIconsFaWrap & JSXBase.HTMLAttributes<HTMLUniIconsFaWrapElement>;
            "uni-icons-mat": LocalJSX.UniIconsMat & JSXBase.HTMLAttributes<HTMLUniIconsMatElement>;
            "uni-icons-mat-common": LocalJSX.UniIconsMatCommon & JSXBase.HTMLAttributes<HTMLUniIconsMatCommonElement>;
            "uni-icons-mat-filled": LocalJSX.UniIconsMatFilled & JSXBase.HTMLAttributes<HTMLUniIconsMatFilledElement>;
            "uni-icons-mat-filled-shadow": LocalJSX.UniIconsMatFilledShadow & JSXBase.HTMLAttributes<HTMLUniIconsMatFilledShadowElement>;
            "uni-icons-mat-filled-wrap": LocalJSX.UniIconsMatFilledWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatFilledWrapElement>;
            "uni-icons-mat-outlined": LocalJSX.UniIconsMatOutlined & JSXBase.HTMLAttributes<HTMLUniIconsMatOutlinedElement>;
            "uni-icons-mat-outlined-shadow": LocalJSX.UniIconsMatOutlinedShadow & JSXBase.HTMLAttributes<HTMLUniIconsMatOutlinedShadowElement>;
            "uni-icons-mat-outlined-wrap": LocalJSX.UniIconsMatOutlinedWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatOutlinedWrapElement>;
            "uni-icons-mat-round": LocalJSX.UniIconsMatRound & JSXBase.HTMLAttributes<HTMLUniIconsMatRoundElement>;
            "uni-icons-mat-round-shadow": LocalJSX.UniIconsMatRoundShadow & JSXBase.HTMLAttributes<HTMLUniIconsMatRoundShadowElement>;
            "uni-icons-mat-round-wrap": LocalJSX.UniIconsMatRoundWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatRoundWrapElement>;
            "uni-icons-mat-shadow": LocalJSX.UniIconsMatShadow & JSXBase.HTMLAttributes<HTMLUniIconsMatShadowElement>;
            "uni-icons-mat-sharp": LocalJSX.UniIconsMatSharp & JSXBase.HTMLAttributes<HTMLUniIconsMatSharpElement>;
            "uni-icons-mat-sharp-shadow": LocalJSX.UniIconsMatSharpShadow & JSXBase.HTMLAttributes<HTMLUniIconsMatSharpShadowElement>;
            "uni-icons-mat-sharp-wrap": LocalJSX.UniIconsMatSharpWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatSharpWrapElement>;
            "uni-icons-mat-two-tone": LocalJSX.UniIconsMatTwoTone & JSXBase.HTMLAttributes<HTMLUniIconsMatTwoToneElement>;
            "uni-icons-mat-two-tone-shadow": LocalJSX.UniIconsMatTwoToneShadow & JSXBase.HTMLAttributes<HTMLUniIconsMatTwoToneShadowElement>;
            "uni-icons-mat-two-tone-wrap": LocalJSX.UniIconsMatTwoToneWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatTwoToneWrapElement>;
            "uni-icons-mat-wrap": LocalJSX.UniIconsMatWrap & JSXBase.HTMLAttributes<HTMLUniIconsMatWrapElement>;
        }
    }
}
